version: '2.1'

services:

  zookeeper:
      restart: always
      image: "zookeeper:3.5"
      hostname: zookeeper
      container_name: zookeeper
      ports:
        - "2181:2181"

  kafka:
      image: confluentinc/cp-kafka:5.3.1
      hostname: kafka
      container_name: kafka
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:19092,PLAINTEXT_HOST://kafka:9092
        KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://127.0.0.1:8081
      restart: always

  schema-registry:
      image: confluentinc/cp-schema-registry:5.3.1
      container_name: schema-registry
      depends_on:
        - zookeeper
        - kafka
      ports:
        - "8081:8081"
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:19092'
        SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
        SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      restart: always
  
  akhq:
      image: tchiotludo/akhq
      container_name: akhq
      environment:
        AKHQ_CONFIGURATION: |
          akhq:
            connections:
              docker-kafka-server:
                properties:
                  bootstrap.servers: "kafka:19092"
                schema-registry:
                  url: "http://schema-registry:8081"
      ports:
        - "8080:8080"
      restart: always
  
networks:
  default:
    external: 
      name: kafka-stack-network 
